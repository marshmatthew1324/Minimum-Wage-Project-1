---
title: "R Notebook"
output: html_notebook
---

```{r}
# setwd("C:/Users/madou/OneDrive - UCLA IT Services/2)_2023_Fall/PS-170A/Minimum-Wage-Project")
# setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
# ################################################################ #
# Importing CSVs for fast food/limited-service restaurants only ####
# ################################################################ #

legal_serv_orig <- new.env()
legal_serv_orig$legal_2011 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2011.q1-q4 5411 Legal services.csv")
 legal_serv_orig$legal_2012 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2012.q1-q4 5411 Legal services.csv")
 legal_serv_orig$legal_2013 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2013.q1-q4 5411 Legal services.csv")
 legal_serv_orig$legal_2014 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2014.q1-q4 5411 Legal services.csv")
 legal_serv_orig$legal_2015 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2015.q1-q4 5411 Legal services.csv")
 legal_serv_orig$legal_2016 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2016.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2017 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2017.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2018 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2018.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2019 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2019.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2020 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2020.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2021 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2021.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2022 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2022.q1-q4 5411 NAICS 5411 Legal services.csv")
 legal_serv_orig$legal_2023 <-
   read_csv(
     file = "C:\\Users\\marsh\\Downloads\\2023.q1-q1 5411 NAICS 5411 Legal services.csv")
```

```{r}
# All the "Limited-service restaurants" CSVs can be 
# loaded with the .RData file below:
#load(file = "BLS_limited-service_rest.RData", 
    #envir = limited_serv_orig <- new.env())

counties_of_interest <- "((Wyandotte|Johnson|Leavenworth|Atchison|Bourbon|Cherokee|Brown|Linn|Miami|Doniphan) County, Kansas|(Buchanan|Platte|Clay|Jackson|Cass|Bates|Barton|Jasper|Newton|Vernon) County, Missouri)"
# counties_of_interest <- "Kansas|Missouri"


columns_of_interest <- c(
  "area_fips", "year", "qtr", "area_title", 
  # "qtrly_estabs_count", 
  "month1_emplvl", "month2_emplvl", "month3_emplvl",  "total_qtrly_wages", 
  "taxable_qtrly_wages", "qtrly_contributions", "avg_wkly_wage", 
  "industry_code", "own_title")

```

```{r}
## ############################################# #
## Filtering counties and columns of interest ####
## ############################################# #

legal_serv_filtered <- new.env()
legal_serv_filtered$legal_2011_f <- legal_serv_orig$legal_2011[
  str_detect(
    string = legal_serv_orig$legal_2011$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2012_f <- legal_serv_orig$legal_2012[
  str_detect(
    string = legal_serv_orig$legal_2012$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2013_f <- legal_serv_orig$legal_2013[
  str_detect(
    string = legal_serv_orig$legal_2013$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2014_f <- legal_serv_orig$legal_2014[
  str_detect(
    string = legal_serv_orig$legal_2014$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2015_f <- legal_serv_orig$legal_2015[
  str_detect(
    string = legal_serv_orig$legal_2015$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2016_f <- legal_serv_orig$legal_2016[
  str_detect(
    string = legal_serv_orig$legal_2016$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2017_f <- legal_serv_orig$legal_2017[
  str_detect(
    string = legal_serv_orig$legal_2017$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2018_f <- legal_serv_orig$legal_2018[
  str_detect(
    string = legal_serv_orig$legal_2018$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2019_f <- legal_serv_orig$legal_2019[
  str_detect(
    string = legal_serv_orig$legal_2019$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2020_f <- legal_serv_orig$legal_2020[
  str_detect(
    string = legal_serv_orig$legal_2020$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2021_f <- legal_serv_orig$legal_2021[
  str_detect(
    string = legal_serv_orig$legal_2021$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2022_f <- legal_serv_orig$legal_2022[
  str_detect(
    string = legal_serv_orig$legal_2022$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

legal_serv_filtered$legal_2023_f <- legal_serv_orig$legal_2023[
  str_detect(
    string = legal_serv_orig$legal_2023$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

```

```{r}
# ####################################################### #
## Combining all data frames for all years of interest ####
# Limited Food Service ################################## #
# ####################################################### #
legal_combined <- new.env()
legal_combined$combined <- 
  legal_serv_filtered$legal_2011_f |> 
  add_row(legal_serv_filtered$legal_2012_f) |> 
  add_row(legal_serv_filtered$legal_2013_f) |> 
  add_row(legal_serv_filtered$legal_2014_f) |> 
  add_row(legal_serv_filtered$legal_2015_f) |> 
  add_row(legal_serv_filtered$legal_2016_f) |> 
  add_row(legal_serv_filtered$legal_2017_f) |> 
  add_row(legal_serv_filtered$legal_2018_f) |> 
  add_row(legal_serv_filtered$legal_2019_f) |> 
  add_row(legal_serv_filtered$legal_2020_f) |> 
  add_row(legal_serv_filtered$legal_2021_f) |> 
  add_row(legal_serv_filtered$legal_2022_f) |> 
  add_row(legal_serv_filtered$legal_2023_f)

### ################################################################### #
### Gathering monthly emplvl into one column and month into another. ####
### ################################################################### #
legal_combined$gather <- 
  legal_combined$combined |> 
  gather(
    key = "month", 
    value = "emplvl",  
    month1_emplvl, 
    month2_emplvl, 
    month3_emplvl) |> 
  # Extract the numeric part from the "month" column
  mutate(
    month =
      case_when( # Converting to numeric values
        month == "month1_emplvl" ~ 1,
        month == "month2_emplvl" ~ 2,
        month == "month3_emplvl" ~ 3))
## ############################# #
## Combine year, qtr, month ####
## ############################# #
legal_combined$gather$date <- 
  paste(
    legal_combined$gather$month + 
      (legal_combined$gather$qtr - 1) * 3, 1, 
    legal_combined$gather$year, sep = "/")

legal_combined$gather$date <- 
  as.Date(legal_combined$gather$date, format = "%m/%d/%Y")

legal_combined$converted <- 
  legal_combined$gather |> 
  mutate(
    year_decimal = (year + (qtr - 1) * (1/4) + (month - 1) * (1/12)))
  # select(-qtr, -month, -own_title)

legal_combined$pivot <- 
  legal_combined$converted |> 
  mutate(
    emplvl_legal = emplvl,
    state = case_when(
      grepl(pattern = "Missouri", x = area_title) ~ "MO",
      grepl(pattern = "Kansas", x = area_title) ~ "KS")) |> 
  select(-industry_code, -emplvl) |> 
  rename(
    ltd_total_qtrly_wages = total_qtrly_wages,
    ltd_taxable_qtrly_wages = taxable_qtrly_wages,
    ltd_qtrly_contributions = qtrly_contributions,
    ltd_avg_wkly_wage = avg_wkly_wage)

```

```{r}
legal_combined$combined$state <- str_detect(legal_combined$combined$area_title, pattern = "Missouri") |> ifelse(test = _,yes = "MO",no =  "KS")
legal_combined$combined |>
  aggregate(avg_wkly_wage ~ state + year, FUN = mean) |>
  pivot_wider(
    names_from = year,
    values_from = avg_wkly_wage
  )
```

```{r}
# ###################### #
# Minimum wage data ####
# ###################### #
min_wage <- new.env()
min_wage$backup <- read_csv(file = "min-wage.csv")

min_wage$filtered <-
  min_wage$backup |> 
  mutate(date = as.Date(Date, format = "%m/%d/%Y")) |> 
  filter(year(date) >= 2011) |>
  mutate(year = year(date)) |> 
  rename(state = region) |> 
  select(-Date)

min_wage$legal <- 
  left_join(
    x = legal_combined$pivot,
    y = min_wage$filtered |> select(-mw_increase, -date))

min_wage$legal_increase <-
  left_join(
    x = min_wage$legal,
    y = min_wage$filtered)

min_wage$legal_increase$mw_increase[
  is.na(min_wage$legal_increase$mw_increase)] <- 0

min_wage$legal
```

```{r}
# # ##################################################### #
# # Begin importing CSVs for emp lvl in ALL industries ####
# # ##################################################### #

all_industries_orig <- new.env()

all_industries_orig$All_Ind_2023 <- read_csv("C:\\Users\\marsh\\Downloads\\2023.q1-q1 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2022 <- read_csv("C:\\Users\\marsh\\Downloads\\2022.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2021 <- read_csv("C:\\Users\\marsh\\Downloads\\2021.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2020 <- read_csv("C:\\Users\\marsh\\Downloads\\2020.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2019 <- read_csv("C:\\Users\\marsh\\Downloads\\2019.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2018 <- read_csv("C:\\Users\\marsh\\Downloads\\2018.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2017 <- read_csv("C:\\Users\\marsh\\Downloads\\2017.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2016 <- read_csv("C:\\Users\\marsh\\Downloads\\2016.q1-q4 10 10 Total, all industries.csv")
all_industries_orig$All_Ind_2015 <- read_csv("C:\\Users\\marsh\\Downloads\\2015.q1-q4 10 Total, all industries.csv")
all_industries_orig$All_Ind_2014 <- read_csv("C:\\Users\\marsh\\Downloads\\2014.q1-q4 10 Total, all industries.csv")
all_industries_orig$All_Ind_2013 <- read_csv("C:\\Users\\marsh\\Downloads\\2013.q1-q4 10 Total, all industries.csv")
all_industries_orig$All_Ind_2012 <- read_csv("C:\\Users\\marsh\\Downloads\\2012.q1-q4 10 Total, all industries.csv")
all_industries_orig$All_Ind_2011 <- read_csv("C:\\Users\\marsh\\Downloads\\2011.q1-q4 10 Total, all industries.csv")

```

```{r}
# All the "all industries" CSVs can be loaded with the .RData file below:


# ## ############################################# #
# ## Filtering columns and counties of interest ####
# ## ############################################# #
all_industries_filtered <- new.env()
all_industries_filtered$All_Ind_2023_f <- all_industries_orig$All_Ind_2023[
  str_detect(
    string = all_industries_orig$All_Ind_2023$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2022_f <- all_industries_orig$All_Ind_2022[
  str_detect(
    string = all_industries_orig$All_Ind_2022$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2021_f <- all_industries_orig$All_Ind_2021[
  str_detect(
    string = all_industries_orig$All_Ind_2021$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2020_f <- all_industries_orig$All_Ind_2020[
  str_detect(
    string = all_industries_orig$All_Ind_2020$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2019_f <- all_industries_orig$All_Ind_2019[
  str_detect(
    string = all_industries_orig$All_Ind_2019$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2018_f <- all_industries_orig$All_Ind_2018[
  str_detect(
    string = all_industries_orig$All_Ind_2018$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2017_f <- all_industries_orig$All_Ind_2017[
  str_detect(
    string = all_industries_orig$All_Ind_2017$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2016_f <- all_industries_orig$All_Ind_2016[
  str_detect(
    string = all_industries_orig$All_Ind_2016$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2015_f <- all_industries_orig$All_Ind_2015[
  str_detect(
    string = all_industries_orig$All_Ind_2015$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2014_f <- all_industries_orig$All_Ind_2014[
  str_detect(
    string = all_industries_orig$All_Ind_2014$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2013_f <- all_industries_orig$All_Ind_2013[
  str_detect(
    string = all_industries_orig$All_Ind_2013$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2012_f <- all_industries_orig$All_Ind_2012[
  str_detect(
    string = all_industries_orig$All_Ind_2012$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]

all_industries_filtered$All_Ind_2011_f <- all_industries_orig$All_Ind_2011[
  str_detect(
    string = all_industries_orig$All_Ind_2011$area_title,
    pattern = counties_of_interest
  ), columns_of_interest]


```

```{r}
## ################################################# #
## Combining employment for all years of interest ####
## All employment; all industries ################## #
## ################################################# #
all_ind_combined <- new.env()
all_ind_combined$combined <-
  all_industries_filtered$All_Ind_2011_f |>
  add_row(all_industries_filtered$All_Ind_2012_f) |>
  add_row(all_industries_filtered$All_Ind_2013_f) |>
  add_row(all_industries_filtered$All_Ind_2014_f) |>
  add_row(all_industries_filtered$All_Ind_2015_f) |>
  add_row(all_industries_filtered$All_Ind_2016_f) |>
  add_row(all_industries_filtered$All_Ind_2017_f) |>
  add_row(all_industries_filtered$All_Ind_2018_f) |>
  add_row(all_industries_filtered$All_Ind_2019_f) |>
  add_row(all_industries_filtered$All_Ind_2020_f) |>
  add_row(all_industries_filtered$All_Ind_2021_f) |>
  add_row(all_industries_filtered$All_Ind_2022_f) |>
  add_row(all_industries_filtered$All_Ind_2023_f) |>
  dplyr::filter(own_title == "Private") |> 
  rename(
    all_total_qtrly_wages = total_qtrly_wages,
    all_taxable_qtrly_wages = taxable_qtrly_wages,
    all_qtrly_contributions = qtrly_contributions,
    all_avg_wkly_wage = avg_wkly_wage)

# ### ######################################## #
# ### Gather for all industries ################ 
# ### Puts month and emplvl in separate columns 
# ### ######################################## #
all_ind_combined$gather <-
  all_ind_combined$combined |>
  gather(
    key = "month",
    value = "emplvl",
    month1_emplvl,
    month2_emplvl,
    month3_emplvl) |>
  # Extract the numeric part from the "month" column
  mutate(
    month =
      case_when( # Converting to numeric values
        month == "month1_emplvl" ~ 1,
        month == "month2_emplvl" ~ 2,
        month == "month3_emplvl" ~ 3))

all_ind_combined$gather$emplvl_all <- all_ind_combined$gather$emplvl

all_ind_combined$gather$emplvl <- NULL
all_ind_combined$gather$industry_code <- NULL
```

```{r}
# Joining all industries and limited service
joined <- new.env()

joined$data <- 
  full_join(
    x = min_wage$legal_increase,
    y = all_ind_combined$gather) |> 
  mutate(
    # year_2018 = ifelse(year(date) == 2018, 1, 0),
    proportion_legal = emplvl_legal / emplvl_all) |> 
  rename(State = state) |> 
  arrange(date) |> 
  filter(proportion_legal > 0 & proportion_legal < Inf) |> 
  mutate(proportion_legal = proportion_legal * 100) |> 
  mutate(
    area_fips = factor(area_fips),
    area_title = factor(area_title),
    Post_Treatment = year >= 2019,
    Treatment_Group = State == "MO") |> 
  # dummy_columns(select_columns = c("State", "year")) |> 
  na.omit()

joined$data_reduced <-
  joined$data |>
  select(
    "area_fips", 
     # "year",
     # "qtr", 
     "area_title", 
     # "ltd_total_qtrly_wages",  
     # "ltd_taxable_qtrly_wages", 
     # "ltd_qtrly_contributions", 
     # "ltd_avg_wkly_wage",  
     # "own_title", 
     # "month", 
     "date", 
     # "year_decimal", 
     # "emplvl_limited",  
     "State", 
     # "min_wage", 
     # "mw_increase", 
     # "all_total_qtrly_wages", 
     # "all_taxable_qtrly_wages", 
     # "all_qtrly_contributions", 
     # "all_avg_wkly_wage", 
     # "emplvl_all", 
     "proportion_legal", 
     "Post_Treatment", 
     "Treatment_Group"
  )

joined$data_reduced
```

```{r}
# Filter June values

joined$data_18_19 <- 
  joined$data_reduced |>
  filter(
    month(date) == 6 &
      year(date) %in% 2018:2019) |>
  na.omit() # |> 
   # mutate(month = month(date)) |>
  # select(-date, -month) |>
  # pivot_wider(
  #   names_from = c(year),
  #   names_prefix = "prop_",
  #   values_from = proportion_limited) |>

    # proportion_change = prop_2019 - prop_2018
    # ) |>
# Run panel data model with area_title as a fixed effect
# panel_model <- 
#   joined_data_1718 |> 
#   plm(proportion_limited ~  Treatment_Group + Post_Treatment+ date + area_title, 
#       model = "within",
#       index = c("area_title", "date"),
#       effect = "twoways",
#       data = _)
# 
# summary(panel_model)

# #################### #
# D-i-D 2017-2018 ####
# #################### #
library(lfe)
models <- new.env()
models$felm <- 
  joined$data_18_19 |> 
  lm(formula = proportion_legal ~  Treatment_Group + Post_Treatment + area_fips)

summary(models$felm)

deci_period_prop_chg <- seq(2011.5, 2022.5, by = 1)

joined$data |> filter(year_decimal %in% deci_period_prop_chg & State == "KS") |> 
  aggregate(proportion_legal ~ State + year_decimal, FUN = mean) |> 
  arrange(State) |> 
  mutate(change = c(NA, diff(proportion_legal))) |> 
  add_row(
    joined$data |> filter(year_decimal %in% deci_period_prop_chg & State == "MO") |> 
      aggregate(proportion_legal ~ State + year_decimal, FUN = mean) |> 
      arrange(State) |> 
      mutate(change = c(NA, diff(proportion_legal)))) |> 
  pivot_wider(
    names_from = State,
    values_from = c('proportion_legal', 'change')) #|> 
  # write_csv(file = "prop_chg.csv")
  # select(-proportion_limited) |> 
  # pivot_wider(
  #   names_from = State,
  #   values_from = change
  # )
```

```{r}
# Calculate means ####
deci_period_means_trend <- seq(2011, 2018.5, by = 1/12)

means_per_period <- joined$data |> 
  filter(year_decimal %in% deci_period_means_trend) |> 
  aggregate(proportion_legal ~ year_decimal + State, FUN = mean) |> 
  pivot_wider(
    names_from = State,
    values_from = proportion_legal
  ) |> data.frame()
diff_KS <- diff(means_per_period$KS)
diff_MO <- diff(means_per_period$MO)

lm_diffs <- lm(diff_MO ~ diff_KS)
plot(
  x = diff_KS,
  y = diff_MO,
  col = 'blue', 
  pch = 16
)
abline(lm_diffs, col = 'red')
plot(lm_diffs)

write_csv(x = means_per_period, file = "means_per_period.csv")

cor(means_per_period$KS, means_per_period$MO)

# scatter plot ####
ggplot(data = joined$data |> filter(year_decimal %in% deci_period_means_trend), 
       aes(x = year_decimal, y = proportion_legal, color = State)) +
  # geom_point(position = position_dodge(width = 0.02)) +
  # geom_smooth(method = "loess", se = FALSE, span = 0.1) +
  geom_line(
    aes(group = State),
    stat = "summary",
    fun = mean,
    lwd = 1) +
  labs(title = "Means Plot") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
  # stat_summary(
  #   fun = mean,
  #   geom = "point",
  #   size = 2) +
  # scale_x_continuous(
  # breaks = seq(2016, 2020, by = 0.25),
  # limits = c(2011, 2023.25)
  # ) +

# Plotting means to check for parallel trends
ggplot(data = joined$data |> filter(year_decimal %in% deci_period_means_trend), 
       aes(x = year_decimal, y = proportion_legal, color = State)) +
  stat_summary(
    fun = mean,
    geom = "point") +
  geom_line(
    aes(group = State),
    stat = "summary",
    fun = mean) +
  # scale_x_continuous(
    # breaks = seq(2016, 2020, by = 0.25),
    # limits = c(2011, 2023.25)
  # ) +
  labs(title = "Means Plot") + 
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust = 1))
```
